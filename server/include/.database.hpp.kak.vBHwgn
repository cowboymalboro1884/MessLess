#ifndef DATABASE_HPP
#define DATABASE_HPP
#include<pqxx/pqxx>
#include<string>
#include<vector>
#include<boost/noncopyable.hpp>

namespace messless{
class Database:private boost::noncopyable{
	pqxx::connection connection;
       	pqxx::work worker;
public:
    	Database();
    	friend class DatabaseGeneral;
    	friend class DatabaseUser;
    	friend class DatabaseCompany;
}

class DatabaseGeneral{
public:
    
}

class DatabaseUser{
public:
	unsigned int login_user(const std::string& email, const std::string& password);//returns user id or zero if user doesn't exist    	
}

class DatabaseCompany{
public:
    	unsigned int create_company(const std::string& company_name,const std::string& company_bio);//returns company id
    	unsigned int create_user(const std::string& email, const std::string& password, const std::string& name, const std::string& surname, unsigned int company_id, const std::string& user_role);//returns user id
}
}

#endif
